#!/usr/bin/env python 

import argparse

from ceres import templates
from ceres import versions
from ceres import cities

def get_parser():
    parser = argparse.ArgumentParser(description='Script to produce HDF5 files')
    parser.add_argument('-j','--jobs',
                        action   = 'store',
                        help     = 'jobs',
                        required = 'True')
    parser.add_argument('-c','--city',
                        action   = 'store',
                        help     = 'city',
                        required = 'True')
    parser.add_argument('-r','--run',
                        action   = 'store',
                        help     = 'run number',
                        required = 'True')
    parser.add_argument('-t','--type',
                        action   = 'store',
                        help     = 'run type',
                        required = 'True')
    parser.add_argument('-m','--maxfiles',
                        action   = 'store',
                        help     = 'maximum number of files to be processed',
                        default  = float("inf"))
    parser.add_argument('-x','--do-not-submit',
                        action   = 'store_true',
                        help     = 'skip job submission if present')
    parser.add_argument('-ic','--ic-tag',
                        action   = 'store',
                        help     = 'ic tag for input files')
    parser.add_argument('-ceres','--ceres-tag',
                        action   = 'store',
                        help     = 'ceres tag for input files')
    parser.add_argument('-d','--debug',
                        action   = 'store_true',
                        help     = 'print debug information')
    parser.add_argument('-f','--file',
                        action   = 'store',
                        help     = 'file to process')
    return parser

#get options
args = get_parser().parse_args()

version        = versions.get_version()
templates_dir  = templates.get_dir(version)
ic_tag         = versions.get_ic_tag(templates_dir)
ceres_tag      = versions.get_ceres_tag()

base_dir = '/analysis/{}/hdf5/{}/{}/{}/'.format(args.run,
                                                version,
                                                ic_tag,
                                                ceres_tag)
path_out = base_dir + cities.outputs[args.city] + '/'
print(path_out)
